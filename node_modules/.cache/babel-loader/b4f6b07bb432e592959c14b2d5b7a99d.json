{"ast":null,"code":"var _jsxFileName = \"/Users/alextucker/Desktop/YouTube_Clone_FrontEnd_React/src/CommentList/CommentList.jsx\";\nimport React from 'react';\nimport AddReply from '../AddReply/AddReply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentList = props => {\n  console.log(props.videoComments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.videoComments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", comment.comment_body, \" Likes:\", comment.like, \" Dislikes:\", comment.dislike, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => props.updateLike(comment),\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 34\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => props.updateDislike(comment),\n              children: \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: props.commentReplies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: reply.reply_body\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 22,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddReply, {\n            comment: comment,\n            postReply: props.postReply\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/Users/alextucker/Desktop/YouTube_Clone_FrontEnd_React/src/CommentList/CommentList.jsx"],"names":["React","AddReply","CommentList","props","console","log","videoComments","map","comment","comment_body","like","dislike","updateLike","updateDislike","commentReplies","reply","reply_body","postReply"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAlB;AAEA,sBACI;AAAA,2BACQ;AAAA,gBACKH,KAAK,CAACG,aAAN,CAAoBC,GAApB,CAAyBC,OAAD,iBACzB;AAAA,+BACI;AAAA,kCACI;AAAA,4BAAMA,OAAO,CAACC,YAAd,aAAmCD,OAAO,CAACE,IAA3C,gBAA2DF,OAAO,CAACG,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,yCAAK;AAAQ,cAAA,OAAO,EAAG,MAAMR,KAAK,CAACS,UAAN,CAAiBJ,OAAjB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,yCAAK;AAAQ,cAAA,OAAO,EAAG,MAAML,KAAK,CAACU,aAAN,CAAoBL,OAApB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,mCACI;AAAA,wBACKL,KAAK,CAACW,cAAN,CAAqBP,GAArB,CAA0BQ,KAAD,iBAC1B;AAAA,uCACI;AAAA,yCACI;AAAA,8BAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAiBI,QAAC,QAAD;AAAU,YAAA,OAAO,EAAER,OAAnB;AAA4B,YAAA,SAAS,EAAEL,KAAK,CAACc;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAlCD;;KAAMf,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport AddReply from '../AddReply/AddReply';\n\nconst CommentList = (props) => {\n\n    console.log(props.videoComments)\n\n    return ( \n        <div>\n                <ul>\n                    {props.videoComments.map((comment) =>\n                    <div>\n                        <div>\n                            <li> {comment.comment_body} Likes:{comment.like} Dislikes:{comment.dislike} </li>\n                            <li> <button onClick={ () => props.updateLike(comment)}>Like</button>  </li>\n                            <li> <button onClick={ () => props.updateDislike(comment)}>Dislike</button> </li>\n                            <div>\n                                <ul>\n                                    {props.commentReplies.map((reply) =>\n                                    <div>\n                                        <div>\n                                            <li>{reply.reply_body}</li>\n                                        </div>\n                                    </div>\n                                    )}\n                                </ul>\n                                \n                            </div>\n                            \n                            <AddReply comment={comment} postReply={props.postReply}/>\n                        </div>\n                        \n                    </div>\n                    )}\n                </ul>\n        </div>\n    );\n}\n\nexport default CommentList;"]},"metadata":{},"sourceType":"module"}