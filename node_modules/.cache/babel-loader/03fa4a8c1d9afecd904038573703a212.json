{"ast":null,"code":"var _jsxFileName = \"/Users/alextucker/Desktop/YouTube_Clone_FrontEnd_React/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchBar from './SearchBar/SearchBar';\nimport SearchResultsList from './SearchResultsList/SearchResultsList';\nimport VideoPlayer from './VideoPlayer/VideoPlayer';\nimport AddComment from './AddComment/AddComment';\nimport CommentList from './CommentList/CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSelectedVideo = async video => {\n      this.setState({\n        selectedVideo: video\n      });\n      console.log(this.state.selectedVideo);\n    };\n\n    this.getSearchResults = async searchInput => {\n      let response = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?q=${searchInput}&key=AIzaSyAOyG4Z4cTTK9TQEELOis9CYRdWmDSjq-0&maxResults=10&part=snippet`);\n      this.setState({\n        videoSearchResults: response.data.items\n      });\n      console.log(this.state.videoSearchResults);\n    };\n\n    this.postComment = async (comment, video) => {\n      try {\n        console.log('Succes create comment in API call');\n        comment.videoid = video.id.videoId;\n        let response = await axios.post('http://127.0.0.1:8000/YouTube_API/', comment);\n        let tempComment = this.state.allComments;\n        tempComment.push(response.data);\n        this.setState({\n          allComments: tempComment\n        });\n        this.listComments(video);\n      } catch (ex) {\n        console.log('Error in create comment API call', ex);\n      }\n    };\n\n    this.listComments = async video => {\n      let response = await axios.get('http://127.0.0.1:8000/YouTube_API/' + video.id.videoId + '/');\n      this.setState({\n        videoComments: response.data\n      });\n    };\n\n    this.postReply = async (reply, comment) => {\n      try {\n        console.log('Succes create reply in API call');\n        reply.comment_id = comment.id;\n        let response = await axios.post('http://127.0.0.1:8000/YouTube_API/reply/', reply);\n        let tempReplies = this.state.replies;\n        tempReplies.push(response.data);\n        this.setState({\n          replies: tempReplies\n        });\n      } catch (ex) {\n        console.log('Error in create reply API call', ex);\n      }\n    };\n\n    this.state = {\n      selectedVideo: [],\n      videoSearchResults: [],\n      allComments: [],\n      videoComments: [],\n      replies: [],\n      commentReplies: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-8\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          handleSearchSubmit: this.getSearchResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          selectedVideo: this.state.selectedVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n          postComment: this.postComment,\n          selectedVideo: this.state.selectedVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n          videoComments: this.state.videoComments,\n          postReply: this.postReply,\n          commentReplies: commentReplies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-4\",\n        children: /*#__PURE__*/_jsxDEV(SearchResultsList, {\n          videoSearchResults: this.state.videoSearchResults,\n          setSelectedVideo: this.setSelectedVideo,\n          listComments: this.listComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alextucker/Desktop/YouTube_Clone_FrontEnd_React/src/App.js"],"names":["React","Component","axios","SearchBar","SearchResultsList","VideoPlayer","AddComment","CommentList","App","constructor","props","setSelectedVideo","video","setState","selectedVideo","console","log","state","getSearchResults","searchInput","response","get","videoSearchResults","data","items","postComment","comment","videoid","id","videoId","post","tempComment","allComments","push","listComments","ex","videoComments","postReply","reply","comment_id","tempReplies","replies","commentReplies","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAIA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,gBAhBmB,GAgBA,MAAOC,KAAP,IAAiB;AAClC,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,aAAvB;AACD,KArBkB;;AAAA,SAuBnBI,gBAvBmB,GAuBA,MAAOC,WAAP,IAAuB;AAExC,UAAIC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,sDAAqDF,WAAY,yEAA5E,CAArB;AACA,WAAKN,QAAL,CAAc;AACZS,QAAAA,kBAAkB,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AADtB,OAAd;AAGAT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWK,kBAAvB;AACD,KA9BkB;;AAAA,SAgCnBG,WAhCmB,GAgCL,OAAOC,OAAP,EAAgBd,KAAhB,KAA0B;AAEtC,UAAG;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAU,QAAAA,OAAO,CAACC,OAAR,GAAkBf,KAAK,CAACgB,EAAN,CAASC,OAA3B;AACA,YAAIT,QAAQ,GAAG,MAAMlB,KAAK,CAAC4B,IAAN,CAAW,oCAAX,EAAiDJ,OAAjD,CAArB;AACA,YAAIK,WAAW,GAAG,KAAKd,KAAL,CAAWe,WAA7B;AACAD,QAAAA,WAAW,CAACE,IAAZ,CAAiBb,QAAQ,CAACG,IAA1B;AACA,aAAKV,QAAL,CAAc;AACZmB,UAAAA,WAAW,EAAED;AADD,SAAd;AAIA,aAAKG,YAAL,CAAkBtB,KAAlB;AACD,OAXD,CAYA,OAAOuB,EAAP,EAAW;AACTpB,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDmB,EAAhD;AACD;AACF,KAjDkB;;AAAA,SAmDnBD,YAnDmB,GAmDJ,MAAOtB,KAAP,IAAiB;AAC9B,UAAIQ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,uCAAuCT,KAAK,CAACgB,EAAN,CAASC,OAAhD,GAA0D,GAApE,CAArB;AACI,WAAKhB,QAAL,CAAc;AACVuB,QAAAA,aAAa,EAAEhB,QAAQ,CAACG;AADd,OAAd;AAGL,KAxDkB;;AAAA,SA0DnBc,SA1DmB,GA0DP,OAAOC,KAAP,EAAcZ,OAAd,KAA0B;AAEpC,UAAG;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAsB,QAAAA,KAAK,CAACC,UAAN,GAAmBb,OAAO,CAACE,EAA3B;AACA,YAAIR,QAAQ,GAAG,MAAMlB,KAAK,CAAC4B,IAAN,CAAW,0CAAX,EAAuDQ,KAAvD,CAArB;AACA,YAAIE,WAAW,GAAG,KAAKvB,KAAL,CAAWwB,OAA7B;AACAD,QAAAA,WAAW,CAACP,IAAZ,CAAiBb,QAAQ,CAACG,IAA1B;AACA,aAAKV,QAAL,CAAc;AACZ4B,UAAAA,OAAO,EAAED;AADG,SAAd;AAKD,OAXD,CAYA,OAAOL,EAAP,EAAW;AACTpB,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CmB,EAA9C;AACD;AACF,KA3EkB;;AAEjB,SAAKlB,KAAL,GAAa;AACXH,MAAAA,aAAa,EAAE,EADJ;AAEXQ,MAAAA,kBAAkB,EAAE,EAFT;AAGXU,MAAAA,WAAW,EAAE,EAHF;AAIXI,MAAAA,aAAa,EAAE,EAJJ;AAKXK,MAAAA,OAAO,EAAE,EALE;AAMXC,MAAAA,cAAc,EAAE;AANL,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AA+DDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,kBAAkB,EAAE,KAAK1B;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,aAAa,EAAE,KAAKD,KAAL,CAAWH;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAE,KAAKW,WAA9B;AAA2C,UAAA,aAAa,EAAE,KAAKR,KAAL,CAAWH;AAArE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,WAAD;AAAa,UAAA,aAAa,EAAE,KAAKG,KAAL,CAAWmB,aAAvC;AAAsD,UAAA,SAAS,EAAE,KAAKC,SAAtE;AAAiF,UAAA,cAAc,EAAEK;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,iBAAD;AAAoB,UAAA,kBAAkB,EAAE,KAAKzB,KAAL,CAAWK,kBAAnD;AAAuE,UAAA,gBAAgB,EAAE,KAAKX,gBAA9F;AAAgH,UAAA,YAAY,EAAE,KAAKuB;AAAnI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA5FyB;;AA+F5B,eAAe1B,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchBar from './SearchBar/SearchBar';\nimport SearchResultsList from './SearchResultsList/SearchResultsList';\nimport VideoPlayer from './VideoPlayer/VideoPlayer';\nimport AddComment from './AddComment/AddComment';\nimport CommentList from './CommentList/CommentList';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      selectedVideo: [],\n      videoSearchResults: [],\n      allComments: [],\n      videoComments: [],\n      replies: [],\n      commentReplies: []\n     }\n  }\n\n  componentDidMount(){\n\n  }\n\n  setSelectedVideo = async (video) => {\n    this.setState({\n      selectedVideo: video\n    })\n    console.log(this.state.selectedVideo)\n  }\n\n  getSearchResults = async (searchInput) => {\n    \n    let response = await axios.get(`https://youtube.googleapis.com/youtube/v3/search?q=${searchInput}&key=AIzaSyAOyG4Z4cTTK9TQEELOis9CYRdWmDSjq-0&maxResults=10&part=snippet`);\n    this.setState({\n      videoSearchResults: response.data.items\n    })\n    console.log(this.state.videoSearchResults)\n  }\n\n  postComment = async (comment, video) => {\n    \n    try{\n      console.log('Succes create comment in API call')\n      comment.videoid = video.id.videoId;\n      let response = await axios.post('http://127.0.0.1:8000/YouTube_API/', comment);\n      let tempComment = this.state.allComments;\n      tempComment.push(response.data);\n      this.setState({\n        allComments: tempComment\n\n      })\n      this.listComments(video)\n    }\n    catch (ex) {\n      console.log('Error in create comment API call', ex)\n    }\n  }\n\n  listComments = async (video) => {\n    let response = await axios.get('http://127.0.0.1:8000/YouTube_API/' + video.id.videoId + '/');\n        this.setState({\n            videoComments: response.data\n        });\n  }\n\n  postReply = async (reply, comment) => {\n    \n    try{\n      console.log('Succes create reply in API call')\n      reply.comment_id = comment.id;\n      let response = await axios.post('http://127.0.0.1:8000/YouTube_API/reply/', reply);\n      let tempReplies = this.state.replies;\n      tempReplies.push(response.data);\n      this.setState({\n        replies: tempReplies\n\n      })\n      \n    }\n    catch (ex) {\n      console.log('Error in create reply API call', ex)\n    }\n  }\n\n  render() { \n    return ( \n      <div className='row'>\n        <div className='col-xl-8'>\n          <SearchBar handleSearchSubmit={this.getSearchResults} />\n          <VideoPlayer selectedVideo={this.state.selectedVideo} />\n          <AddComment postComment={this.postComment} selectedVideo={this.state.selectedVideo} />\n          <CommentList videoComments={this.state.videoComments} postReply={this.postReply} commentReplies={commentReplies}/>\n        </div>\n        <div className='col-xl-4'>\n          <SearchResultsList  videoSearchResults={this.state.videoSearchResults} setSelectedVideo={this.setSelectedVideo} listComments={this.listComments}/>\n        </div>\n      </div>\n     );\n  }\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}